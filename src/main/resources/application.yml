server:
  port: ${server.port}
management:
  security:
    flag: false
  server:
    port: ${management.port}
  metrics:
    export:
      prometheus:
        enabled: false
    tags:
      application: analytics
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,prometheus

spring:
  application:
    name: '@project.name@'
  output:
    ansi:
      enabled: always
  flyway:
    url: "jdbc:postgresql://localhost:5432/analytics"
    user: "user"
    password: "password"
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      properties:
        session.timeout.ms: 60000
        max.poll.interval.ms: 60000

info:
  version: '@project.version@'
  stage: dev

clickhouse.db:
  url: "jdbc:clickhouse://localhost:8123/default"
  user: "user"
  password: "password"
  connection.timeout: 50000
  compress: false

postgres.db:
  url: "jdbc:postgresql://localhost:5432/analytics"
  user: "user"
  password: "password"
  schema: "analytics"

kafka:
  max.poll.records: 100
  error-handler:
    retry:
      attempts: 3 #remove property or set negative for infinite attempts
      min.interval: 1000
      max.interval: 600000
  topic:
    event.sink:
      initial: event_sink
    party:
      initial: mg-events-party
      max.poll.records: 50
    rate:
      initial: mg-events-rates
      groupId: analytics-rate-group
      max.poll.records: 50
  consumer:
    prefix: analytics
    concurrency: 7
    throttling-timeout-ms: 1000
  event-flow.resolver.enabled: false
  listener:
    event.sink:
      enabled: true
    party:
      enabled: true
    rate:
      enabled: true

service:
  invoicing:
    url: http://hellgate:8022/v1/processing/invoicing
    networkTimeout: 5000
  dominant:
    url: http://dominant:8022/v1/domain/repository
    networkTimeout: 5000
    scheduler:
      enabled: false
      lockFor: 30m
      pollingDelay: 3000
      querySize: 10

columbus.url: http://columbus:8022/repo
repository.insert.enabled: true

cache:
  party:
    size: 10000
  shop:
    size: 10000

caffeine.cache-expiration-seconds: 60
